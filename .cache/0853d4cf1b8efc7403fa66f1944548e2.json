{"dependencies":[],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Created by chenqifeng on 2016/8/26.\n */\n\nlet cache = {};\n\nlet isTimeStr = exports.isTimeStr = (str = '') => /^\\d+(s|m|h|d|y)?$/.test(str);\n\nlet formatTimeStr = exports.formatTimeStr = (str = '') => {\n  if (!isTimeStr(str)) {\n    return 0;\n  }\n  let num = Number(str.match(/\\d+/)[0]);\n  if (/s$/.test(str)) {\n    return num * 1000;\n  } else if (/m$/.test(str)) {\n    return num * 60 * 1000;\n  } else if (/h$/.test(str)) {\n    return num * 60 * 60 * 1000;\n  } else if (/d$/.test(str)) {\n    return num * 24 * 60 * 60 * 1000;\n  } else if (/y$/.test(str)) {\n    return num * 365 * 24 * 60 * 60 * 1000;\n  } else {\n    return num;\n  }\n};\n\nlet formatDateByStr = exports.formatDateByStr = (date = new Date(), format = 'YYYY-MM-DD') => {\n  var week = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', '日', '一', '二', '三', '四', '五', '六'];\n  return format.replace(/YYYY|YY|MM|DD|hh|mm|ss|星期|周|www|week/g, function (a) {\n    switch (a) {\n      case \"YYYY\":\n        return date.getFullYear();\n      case \"YY\":\n        return (date.getFullYear() + \"\").slice(2);\n      case \"MM\":\n        return date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1;\n      case \"DD\":\n        return date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\n      case \"hh\":\n        return date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours();\n      case \"mm\":\n        return date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\n      case \"ss\":\n        return date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds();\n      case \"星期\":\n        return \"星期\" + week[date.getDay() + 7];\n      case \"周\":\n        return \"周\" + week[date.getDay() + 7];\n      case \"week\":\n        return week[date.getDay()];\n      case \"www\":\n        return week[date.getDay()].slice(0, 3);\n    }\n  });\n};\n\nlet parseURL = exports.parseURL = (url = location.href) => {\n  let a = document.createElement('a');\n  a.href = url;\n  return {\n    source: url || location.href,\n    protocol: a.protocol.replace(':', ''),\n    host: a.hostname,\n    port: a.port,\n    query: a.search,\n    params: function () {\n      let ret = {},\n          seg = a.search.replace(/^\\?/, '').split('&'),\n          len = seg.length,\n          s;\n      for (let i = 0; i < len; i++) {\n        if (!seg[i]) {\n          continue;\n        }\n        s = seg[i].split('=');\n        ret[s[0]] = s[1];\n      }\n      return ret;\n    }(),\n    file: (a.pathname.match(/\\/([^\\/?#]+)$/i) || [, ''])[1],\n    hash: a.hash.replace('#', ''),\n    path: a.pathname.replace(/^([^\\/])/, '/$1'),\n    relative: (a.href.match(/tps?:\\/\\/[^\\/]+(.+)/) || [, ''])[1],\n    segments: a.pathname.replace(/^\\//, '').split('/')\n  };\n};\n\n/**\n * options:{\n * \tkey:\"\",\n *  runNow:true, 是否立即执行\n *  time:1000, 每一秒执行一次\n *  fn:function(){} //每一秒执行的函数\n * }\n */\nlet everyTime = exports.everyTime = options => {\n  if (!(options.key in cache)) {\n    if (options.runNow) {\n      options.fn();\n    }\n    let fn = function loop() {\n      cache[options.key] = setTimeout(loop, options.time);\n      options.fn();\n    };\n    cache[options.key] = setTimeout(fn, options.time);\n  }\n};\n\nlet stopTime = exports.stopTime = key => {\n  window.clearTimeout(cache[options.key]);\n  delete cache[options.key];\n};\n\nlet stopAllTime = exports.stopAllTime = key => {\n  for (let i in cache) {\n    if (cache.hasOwnProperty(i)) {\n      window.clearTimeout(cache[i]);\n    }\n  }\n  cache = {};\n};\n\nlet isObject = exports.isObject = obj => Object.prototype.toString.call(obj) === '[object Object]';\n\nlet calculationTimeByMiniSeconds = exports.calculationTimeByMiniSeconds = (millisecond, notZerofill) => {\n  //共多少豪秒\n  millisecond = Math.round(millisecond / 100);\n\n  let minisecond = millisecond % 10;\n\n  //共多少秒\n  let timeDistanceSec = Math.round((millisecond - minisecond) / 10);\n  //秒\n  let seconds = timeDistanceSec % 60;\n  //所有的分\n  let timeDistanceMin = Math.round((timeDistanceSec - seconds) / 60);\n  //真正的分\n  let minutes = timeDistanceMin % 60;\n  //所有的小时\n  let timeDistanceHour = Math.round((timeDistanceMin - minutes) / 60);\n  //真正的小时\n  let hours = timeDistanceHour % 24;\n  //真正的天\n  let days = Math.round((timeDistanceHour - hours) / 24);\n  //如果为一位，填零\n  if (days < 10 && !notZerofill) {\n    days = \"0\" + days;\n  }\n  if (minutes < 10 && !notZerofill) {\n    minutes = \"0\" + minutes;\n  }\n  if (hours < 10 && !notZerofill) {\n    hours = \"0\" + hours;\n  }\n  if (seconds < 10 && !notZerofill) {\n    seconds = \"0\" + seconds;\n  }\n  return {\n    \"minisecond\": minisecond,\n    \"hours\": hours,\n    \"minutes\": minutes,\n    \"seconds\": seconds,\n    \"days\": days\n  };\n};\n//\n// /**\n//  * @method  sortBy\n//  * @param   array   {Array}\n//  * @param   condition   {Array|Function}\n//  * @desc    对 json 数组多条件排序，只针对所有条件为同一级别，若 json 对象不存在该属性则默认值为 0\n//  * @example\n//  * var a = [{a:1,b:2,c:3,d:2}\n//     , {a:2,b:1,c:3}\n//     , {a:0, b:1,c:1}\n//     , {a:1,b:1,c:3,d:1}\n//     , {a:1, b:1,c: 1}\n//     ]\n//     sortBy(a, ['a', 'c'])\n//  * */\n// export let sortBy = (array, condition) => {\n//\n//     if( Array.isArray( array ) ){\n//         if( condition ){\n//             if( typeof condition === 'function' ){\n//                 array.sort( condition );\n//             }\n//             else if( Array.isArray( condition ) ){\n//                 array.sort((a, b) => {\n//                     let t = condition[0]\n//                         , i = 1\n//                         , l = condition.length\n//                         , rs = a[t] - b[t]\n//                         ;\n//\n//                     if( rs === 0 ){\n//                         for(; i < l; i++ ){\n//                             t = condition[i];\n//                             rs = (a[t] || 0) - (b[t] || 0);\n//\n//                             if( rs !== 0 ){\n//                                 break;\n//                             }\n//                         }\n//                     }\n//\n//                     return rs;\n//                 });\n//             }\n//         }\n//     }\n//     return array;\n// };"},"hash":"2071eea44b7c0afdfa0fce8deb9580b7"}
{"dependencies":[{"name":"../support","loc":{"line":1,"column":47}},{"name":"../util","loc":{"line":2,"column":23}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sessionData = undefined;\n\nvar _support = require(\"../support\");\n\nvar _util = require(\"../util\");\n\nlet sessionKey = 'tg_session_cache',\n    cache = _support.sessionStorage ? sessionStorage : false,\n    data = _support.sessionStorage ? JSON.parse(cache.getItem(sessionKey) || JSON.stringify({})) : {},\n    sessionData = function () {\n  let length = arguments.length;\n  if (!length) {\n    return data;\n  } else if (length === 1) {\n    if ((0, _util.isObject)(arguments[0])) {\n      data = $.extend({}, data, arguments[0]);\n      cache && cache.setItem(sessionKey, JSON.stringify(data));\n    } else {\n      return data[arguments[0]];\n    }\n  } else if (length === 2) {\n    data[arguments[0]] = arguments[1];\n    cache && cache.setItem(sessionKey, JSON.stringify(data));\n  }\n};\nsessionData.remove = function (key) {\n  let length = arguments.length;\n  if (!length) {\n    this.removeAll();\n  } else {\n    for (let i = 0; i < length; i++) {\n      data[arguments[i]] = undefined;\n      delete data[arguments[i]];\n    }\n    cache && cache.setItem(sessionKey, JSON.stringify(data));\n  }\n};\nsessionData.removeAll = function () {\n  data = {};\n  cache && cache.setItem(sessionKey, JSON.stringify(data));\n};\n\nexports.sessionData = sessionData;"},"hash":"c0ccd19caa4572039ea1c101f432ce73"}
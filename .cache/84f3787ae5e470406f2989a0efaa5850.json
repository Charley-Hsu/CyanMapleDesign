{"dependencies":[],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar alias = {\n  androidchrome: 'androidChrome',\n  guge: 'chrome',\n  webview: 'webView',\n  minimalui: 'minimalUi',\n  statusbar: 'statusBar',\n  pixelratio: 'pixelRatio',\n  wechat: 'weixin',\n  wx: 'weixin'\n};\n\nvar device = function () {\n  var l = arguments.length,\n      i = 0,\n      t,\n      result = true;\n\n  if (l === 0) {\n    result = false;\n  } else {\n    for (; i < l; i++) {\n      t = arguments[i];\n\n      if (t in device && device.hasOwnProperty(t)) {\n        result = result && device[t];\n      } else {\n        t = t.toLowerCase();\n\n        if (t in alias) {\n          result = result && device[alias[t]];\n        } else {\n          result = result && false;\n        }\n      }\n\n      if (!result) {\n        break;\n      }\n    }\n  }\n\n  return result;\n};\nvar ua = navigator.userAgent;\n\nvar android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\nvar ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\nvar ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\nvar iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n\ndevice.ios = device.android = device.iphone = device.ipad = device.androidChrome = false;\n\n// Chrome\ndevice.chrome = ua.toLowerCase().indexOf('chrome') >= 0;\n\n// Android\nif (android) {\n  device.os = 'android';\n  device.osVersion = android[2];\n  device.android = true;\n  device.androidChrome = device.android && device.chrome;\n}\nif (ipad || iphone || ipod) {\n  device.os = 'ios';\n  device.ios = true;\n}\n// iOS\nif (iphone && !ipod) {\n  device.osVersion = iphone[2].replace(/_/g, '.');\n  device.iphone = true;\n}\nif (ipad) {\n  device.osVersion = ipad[2].replace(/_/g, '.');\n  device.ipad = true;\n}\nif (ipod) {\n  device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  device.iphone = true;\n}\n// iOS 8+ changed UA\nif (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n  if (device.osVersion.split('.')[0] === '10') {\n    device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n  }\n}\n\n// Webview\ndevice.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n// Minimal UI\nif (device.os && device.os === 'ios') {\n  var osVersionArr = device.osVersion.split('.');\n  device.minimalUi = !device.webView && (ipod || iphone) && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7) && $('meta[name=\"viewport\"]').length > 0 && $('meta[name=\"viewport\"]').attr('content').indexOf('minimal-ui') >= 0;\n}\n\n// Check for status bar and fullscreen app mode\nvar windowWidth = $(window).width();\nvar windowHeight = $(window).height();\n\ndevice.statusBar = device.webView && windowWidth * windowHeight === screen.width * screen.height;\n\n// Classes\nvar classNames = [];\n\n// Pixel Ratio\ndevice.pixelRatio = window.devicePixelRatio || 1;\nclassNames.push('pixel-ratio-' + Math.floor(device.pixelRatio));\nif (device.pixelRatio >= 2) {\n  classNames.push('retina');\n}\n\n// OS classes\nif (device.os) {\n  classNames.push(device.os, device.os + '-' + device.osVersion.split('.')[0], device.os + '-' + device.osVersion.replace(/\\./g, '-'));\n  if (device.os === 'ios') {\n    var major = parseInt(device.osVersion.split('.')[0], 10);\n    for (var i = major - 1; i >= 6; i--) {\n      classNames.push('ios-gt-' + i);\n    }\n  }\n}\n// Status bar classes\nif (device.statusBar) {\n  classNames.push('with-statusbar-overlay');\n} else {\n  $('html').removeClass('with-statusbar-overlay');\n}\n\n// Add html classes\nif (classNames.length > 0) $('html').addClass(classNames.join(' '));\n\n// keng..\ndevice.weixin = /MicroMessenger/i.test(ua);\n\n// UC �����\ndevice.uc = ua.indexOf('UCBrowser') > -1;\n\nexports.default = device;"},"hash":"88edd76db43d2d811eadd4d2b07d8427"}